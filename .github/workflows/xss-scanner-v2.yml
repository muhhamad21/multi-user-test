name: XSS Scanner - PR Registration

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  register-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v41
        with:
          files: '**/*.{js,jsx,ts,tsx,vue,html,java,jsp,kt,scala,php,py}'

      - name: Register PR with XSS Scanner
        if: steps.files.outputs.any_changed == 'true'
        env:
          SUPABASE_URL: https://tlnxydaetxxhwbujytal.supabase.co
          SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRsbnh5ZGFldHh4aHdidWp5dGFsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODIzNTEyOSwiZXhwIjoyMDYzODExMTI5fQ.-fZlBFlo-fXEopmLwzADkm6XAWcqIrX7M0mBPxqVcSQ
        uses: actions/github-script@v7
        with:
          script: |
            const files = '${{ steps.files.outputs.all_changed_files }}'.split(' ');
            const fileContents = [];
            
            // Collect file contents
            for (const file of files) {
              if (file.trim()) {
                try {
                  const content = require('fs').readFileSync(file, 'utf8');
                  fileContents.push({ filename: file, content });
                } catch (err) {
                  console.log('Could not read file:', file);
                }
              }
            }

            // Register PR data to database
            if (fileContents.length > 0) {
              await fetch(`${process.env.SUPABASE_URL}/functions/v1/enhanced-api/api/register-pr`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${process.env.SUPABASE_SERVICE_ROLE_KEY}`
                },
                body: JSON.stringify({
                  pr_number: context.payload.pull_request.number,
                  repository: context.payload.repository.full_name,
                  pr_title: context.payload.pull_request.title,
                  pr_url: context.payload.pull_request.html_url,
                  author: context.payload.pull_request.user.login,
                  github_token: '${{ secrets.GITHUB_TOKEN }}',
                  files: fileContents
                })
              });
              
              console.log('PR registered successfully in XSS Scanner database');
            }